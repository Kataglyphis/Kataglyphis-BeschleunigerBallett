name: Windows build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  BUILD_DIR: build
  # VK_SDK_PATH: C:\VulkanSDK

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2025
    # env:
    #  VULKAN_SDK: C:\VulkanSDK\
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up PATH
        run: |
          echo "C:\VulkanSDK\1.4.309.0\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\VulkanSDK\1.4.309.0\Lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\VulkanSDK\1.4.309.0\Include" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup Vulkan + CMake + LLVM + Cppcheck
        run: |
          choco install llvm --version=20.1.0 --params="'/AddToPath'" -y
          winget install --accept-source-agreements --accept-package-agreements cmake cppcheck KhronosGroup.VulkanSDK
          # ls "C:\VulkanSDK"

      # a github runner has issues with running vulkan driver code; therefore just verify successful build :)
      - name: CMake Build for MSVC
        shell: powershell
        run: |
          mkdir build
          cd build
          cmake --preset "x64-MSVC-Windows-CI" ../
          cmake --build . --target ALL_BUILD --verbose
          ctest

      - name: CMake Build for Clang
        shell: powershell
        run: |
          # if 'build' exists, delete it (recursively, force-delete readonly files)
          if (Test-Path build) {
            Remove-Item build -Recurse -Force
          }
          mkdir build
          cd build
          cmake --preset "x64-Clang-Windows-CI" ../
          cmake --build . --target ALL_BUILD --verbose
          ctest
